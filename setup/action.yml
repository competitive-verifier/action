name: "Set up competitive-verifier"
description: "A composite action that set up competitive-verifier command."
author: "Kzrnm"
branding:
  color: blue
  icon: play-circle
inputs:
  package:
    description: Specify competitive-verifier package path
    required: false
    default: competitive-verifier
  python-version:
    description: Specify python version
    required: false
    default: ""
  cache-pip:
    description: "If true, cache pip"
    required: false
    default: "false"
outputs:
  version:
    description: "Version of competitive-verifier."
    value: ${{ steps.install.outputs.version }}
runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      if: inputs.python-version != ''
      with:
        python-version: ${{inputs.python-version}}

    - uses: actions/cache@v3
      if: startsWith(runner.os, 'Linux') && fromJson(inputs.cache-pip)
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-competitive-verifier-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-pip-competitive-verifier-
    - uses: actions/cache@v3
      if: startsWith(runner.os, 'macOS') && fromJson(inputs.cache-pip)
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-competitive-verifier-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-pip-competitive-verifier-
    - uses: actions/cache@v3
      if: startsWith(runner.os, 'Windows') && fromJson(inputs.cache-pip)
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-competitive-verifier-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-pip-competitive-verifier-

    - name: Install competitive-verifier
      shell: bash
      id: install
      run: |
        echo "::group::pip install"
        pip install "${{inputs.package}}"
        echo "::endgroup::"
        VERSION=$(competitive-verifier --version)
        echo "version=$VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
